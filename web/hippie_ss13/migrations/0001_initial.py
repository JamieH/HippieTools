# -*- coding: utf-8 -*-
# Generated by Django 1.11.5 on 2017-10-03 10:43
from __future__ import unicode_literals

from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='Admin',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('ckey', models.CharField(max_length=32)),
                ('rank', models.CharField(max_length=32)),
                ('level', models.IntegerField()),
                ('flags', models.IntegerField()),
                ('email', models.CharField(blank=True, max_length=45, null=True)),
            ],
            options={
                'db_table': 'admin',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='AdminLog',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('datetime', models.DateTimeField()),
                ('adminckey', models.CharField(max_length=32)),
                ('adminip', models.CharField(max_length=18)),
                ('log', models.TextField()),
            ],
            options={
                'db_table': 'admin_log',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='AdminRanks',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('rank', models.CharField(max_length=40)),
                ('flags', models.IntegerField()),
            ],
            options={
                'db_table': 'admin_ranks',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Ban',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('bantime', models.DateTimeField()),
                ('server_ip', models.IntegerField()),
                ('server_port', models.SmallIntegerField()),
                ('round_id', models.IntegerField()),
                ('bantype', models.CharField(max_length=14)),
                ('reason', models.CharField(max_length=32768)),
                ('job', models.CharField(blank=True, max_length=32, null=True)),
                ('duration', models.IntegerField()),
                ('expiration_time', models.DateTimeField()),
                ('ckey', models.CharField(max_length=32)),
                ('computerid', models.CharField(max_length=32)),
                ('ip', models.IntegerField()),
                ('a_ckey', models.CharField(max_length=32)),
                ('a_computerid', models.CharField(max_length=32)),
                ('a_ip', models.IntegerField()),
                ('who', models.CharField(max_length=2048)),
                ('adminwho', models.CharField(max_length=2048)),
                ('edits', models.TextField(blank=True, null=True)),
                ('unbanned', models.IntegerField(blank=True, null=True)),
                ('unbanned_datetime', models.DateTimeField(blank=True, null=True)),
                ('unbanned_ckey', models.CharField(blank=True, max_length=32, null=True)),
                ('unbanned_computerid', models.CharField(blank=True, max_length=32, null=True)),
                ('unbanned_ip', models.IntegerField(blank=True, null=True)),
            ],
            options={
                'db_table': 'ban',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='ConnectionLog',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('datetime', models.DateTimeField(blank=True, null=True)),
                ('server_ip', models.IntegerField()),
                ('server_port', models.SmallIntegerField()),
                ('round_id', models.IntegerField()),
                ('ckey', models.CharField(blank=True, max_length=45, null=True)),
                ('ip', models.IntegerField()),
                ('computerid', models.CharField(blank=True, max_length=45, null=True)),
            ],
            options={
                'db_table': 'connection_log',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Death',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('pod', models.CharField(max_length=50)),
                ('x_coord', models.SmallIntegerField()),
                ('y_coord', models.SmallIntegerField()),
                ('z_coord', models.SmallIntegerField()),
                ('mapname', models.CharField(max_length=32)),
                ('server_ip', models.IntegerField()),
                ('server_port', models.SmallIntegerField()),
                ('round_id', models.IntegerField()),
                ('tod', models.DateTimeField()),
                ('job', models.CharField(max_length=32)),
                ('special', models.CharField(blank=True, max_length=32, null=True)),
                ('name', models.CharField(max_length=96)),
                ('byondkey', models.CharField(max_length=32)),
                ('laname', models.CharField(blank=True, max_length=96, null=True)),
                ('lakey', models.CharField(blank=True, max_length=32, null=True)),
                ('bruteloss', models.SmallIntegerField()),
                ('brainloss', models.SmallIntegerField()),
                ('fireloss', models.SmallIntegerField()),
                ('oxyloss', models.SmallIntegerField()),
                ('toxloss', models.SmallIntegerField()),
                ('cloneloss', models.SmallIntegerField()),
                ('staminaloss', models.SmallIntegerField()),
                ('last_words', models.CharField(blank=True, max_length=255, null=True)),
                ('suicide', models.IntegerField()),
            ],
            options={
                'db_table': 'death',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Feedback',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('time', models.DateTimeField()),
                ('round_id', models.IntegerField()),
                ('var_name', models.CharField(max_length=32)),
                ('var_value', models.IntegerField(blank=True, null=True)),
                ('details', models.TextField(blank=True, null=True)),
            ],
            options={
                'db_table': 'feedback',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Ipintel',
            fields=[
                ('ip', models.IntegerField(primary_key=True, serialize=False)),
                ('date', models.DateTimeField()),
                ('intel', models.FloatField()),
            ],
            options={
                'db_table': 'ipintel',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='LegacyPopulation',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('playercount', models.IntegerField(blank=True, null=True)),
                ('admincount', models.IntegerField(blank=True, null=True)),
                ('time', models.DateTimeField()),
                ('server_ip', models.IntegerField()),
                ('server_port', models.SmallIntegerField()),
                ('round_id', models.IntegerField()),
            ],
            options={
                'db_table': 'legacy_population',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Library',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('author', models.CharField(max_length=45)),
                ('title', models.CharField(max_length=45)),
                ('content', models.TextField()),
                ('category', models.CharField(max_length=11)),
                ('ckey', models.CharField(max_length=32)),
                ('datetime', models.DateTimeField()),
                ('deleted', models.IntegerField(blank=True, null=True)),
                ('round_id_created', models.IntegerField()),
            ],
            options={
                'db_table': 'library',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Memo',
            fields=[
                ('ckey', models.CharField(max_length=32, primary_key=True, serialize=False)),
                ('memotext', models.TextField()),
                ('timestamp', models.DateTimeField()),
                ('last_editor', models.CharField(blank=True, max_length=32, null=True)),
                ('edits', models.TextField(blank=True, null=True)),
            ],
            options={
                'db_table': 'memo',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Mentor',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('ckey', models.TextField()),
            ],
            options={
                'db_table': 'mentor',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='MentorMemo',
            fields=[
                ('ckey', models.CharField(max_length=32, primary_key=True, serialize=False)),
                ('memotext', models.TextField()),
                ('timestamp', models.DateTimeField()),
                ('last_editor', models.CharField(blank=True, max_length=32, null=True)),
                ('edits', models.TextField(blank=True, null=True)),
            ],
            options={
                'db_table': 'mentor_memo',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Messages',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('type', models.CharField(max_length=15)),
                ('targetckey', models.CharField(max_length=32)),
                ('adminckey', models.CharField(max_length=32)),
                ('text', models.CharField(max_length=8192)),
                ('timestamp', models.DateTimeField()),
                ('server', models.CharField(blank=True, max_length=32, null=True)),
                ('server_ip', models.IntegerField()),
                ('server_port', models.SmallIntegerField()),
                ('round_id', models.IntegerField()),
                ('secret', models.IntegerField()),
                ('lasteditor', models.CharField(blank=True, max_length=32, null=True)),
                ('edits', models.TextField(blank=True, null=True)),
                ('deleted', models.IntegerField()),
            ],
            options={
                'db_table': 'messages',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Notes',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('ckey', models.CharField(max_length=32)),
                ('notetext', models.TextField()),
                ('timestamp', models.DateTimeField()),
                ('adminckey', models.CharField(max_length=32)),
                ('last_editor', models.CharField(blank=True, max_length=32, null=True)),
                ('edits', models.TextField(blank=True, null=True)),
                ('server', models.CharField(max_length=50)),
                ('secret', models.IntegerField()),
            ],
            options={
                'db_table': 'notes',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Player',
            fields=[
                ('ckey', models.CharField(max_length=32, primary_key=True, serialize=False)),
                ('firstseen', models.DateTimeField()),
                ('firstseen_round_id', models.IntegerField()),
                ('lastseen', models.DateTimeField()),
                ('lastseen_round_id', models.IntegerField()),
                ('ip', models.IntegerField()),
                ('computerid', models.CharField(max_length=32)),
                ('lastadminrank', models.CharField(max_length=32)),
                ('accountjoindate', models.DateField(blank=True, null=True)),
                ('flags', models.IntegerField()),
            ],
            options={
                'db_table': 'player',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='PollOption',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('pollid', models.IntegerField()),
                ('text', models.CharField(max_length=255)),
                ('minval', models.IntegerField(blank=True, null=True)),
                ('maxval', models.IntegerField(blank=True, null=True)),
                ('descmin', models.CharField(blank=True, max_length=32, null=True)),
                ('descmid', models.CharField(blank=True, max_length=32, null=True)),
                ('descmax', models.CharField(blank=True, max_length=32, null=True)),
                ('default_percentage_calc', models.IntegerField()),
            ],
            options={
                'db_table': 'poll_option',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='PollQuestion',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('polltype', models.CharField(max_length=11)),
                ('starttime', models.DateTimeField()),
                ('endtime', models.DateTimeField()),
                ('question', models.CharField(max_length=255)),
                ('adminonly', models.IntegerField()),
                ('multiplechoiceoptions', models.IntegerField(blank=True, null=True)),
                ('createdby_ckey', models.CharField(blank=True, max_length=32, null=True)),
                ('createdby_ip', models.IntegerField()),
                ('dontshow', models.IntegerField()),
            ],
            options={
                'db_table': 'poll_question',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='PollTextreply',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('datetime', models.DateTimeField()),
                ('pollid', models.IntegerField()),
                ('ckey', models.CharField(max_length=32)),
                ('ip', models.IntegerField()),
                ('replytext', models.CharField(max_length=2048)),
                ('adminrank', models.CharField(max_length=32)),
            ],
            options={
                'db_table': 'poll_textreply',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='PollVote',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('datetime', models.DateTimeField()),
                ('pollid', models.IntegerField()),
                ('optionid', models.IntegerField()),
                ('ckey', models.CharField(max_length=32)),
                ('ip', models.IntegerField()),
                ('adminrank', models.CharField(max_length=32)),
                ('rating', models.IntegerField(blank=True, null=True)),
            ],
            options={
                'db_table': 'poll_vote',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Privacy',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('datetime', models.DateTimeField()),
                ('ckey', models.CharField(max_length=32)),
                ('option', models.CharField(max_length=128)),
            ],
            options={
                'db_table': 'privacy',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='RoleTime',
            fields=[
                ('ckey', models.CharField(max_length=32, primary_key=True, serialize=False)),
                ('job', models.CharField(max_length=128)),
                ('minutes', models.IntegerField()),
            ],
            options={
                'db_table': 'role_time',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Round',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('start_datetime', models.DateTimeField()),
                ('end_datetime', models.DateTimeField(blank=True, null=True)),
                ('server_ip', models.IntegerField()),
                ('server_port', models.SmallIntegerField()),
                ('commit_hash', models.CharField(blank=True, max_length=40, null=True)),
                ('game_mode', models.CharField(blank=True, max_length=32, null=True)),
                ('game_mode_result', models.CharField(blank=True, max_length=64, null=True)),
                ('end_state', models.CharField(blank=True, max_length=64, null=True)),
                ('shuttle_name', models.CharField(blank=True, max_length=64, null=True)),
                ('map_name', models.CharField(blank=True, max_length=32, null=True)),
                ('station_name', models.CharField(blank=True, max_length=80, null=True)),
            ],
            options={
                'db_table': 'round',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='SchemaRevision',
            fields=[
                ('major', models.IntegerField(primary_key=True, serialize=False)),
                ('minor', models.IntegerField()),
                ('date', models.DateTimeField()),
            ],
            options={
                'db_table': 'schema_revision',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='SpoofCheck',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('whitelist', models.IntegerField()),
                ('ckey', models.CharField(max_length=32)),
                ('computerid_1', models.CharField(max_length=32)),
                ('computerid_2', models.CharField(blank=True, max_length=32, null=True)),
                ('computerid_3', models.CharField(blank=True, max_length=32, null=True)),
                ('datetime_1', models.DateTimeField()),
                ('datetime_2', models.DateTimeField(blank=True, null=True)),
                ('datetime_3', models.DateTimeField(blank=True, null=True)),
            ],
            options={
                'db_table': 'spoof_check',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Watch',
            fields=[
                ('ckey', models.CharField(max_length=32, primary_key=True, serialize=False)),
                ('reason', models.TextField()),
                ('timestamp', models.DateTimeField()),
                ('adminckey', models.CharField(max_length=32)),
                ('last_editor', models.CharField(blank=True, max_length=32, null=True)),
                ('edits', models.TextField(blank=True, null=True)),
            ],
            options={
                'db_table': 'watch',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='WebAudit',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('ckey', models.CharField(blank=True, max_length=50, null=True)),
                ('rank', models.CharField(blank=True, max_length=50, null=True)),
                ('action', models.CharField(blank=True, max_length=200, null=True)),
                ('ip', models.CharField(blank=True, max_length=200, null=True)),
                ('date_time', models.CharField(blank=True, max_length=50, null=True)),
            ],
            options={
                'db_table': 'web_audit',
                'managed': False,
            },
        ),
    ]
